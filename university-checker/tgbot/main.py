import sys
import os
sys.path.append('../../')
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir)))
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings")
from aiogram import Bot, Dispatcher, executor, types
from config.settings import TOKEN, admin_id  #–ê–¥–º–∏–Ω id –∏–∑ —Ç–æ–∫–µ–Ω —Ñ–∞–π–ª–∞, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø–∏—Å–∞–ª –∞–¥–º–∏–Ω—É, —á—Ç–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ç. –¥.
from tgbot.keyboard import main_markup
#from tgbot.add_remove_service import add_service, remove_service
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()

from models.models import Service 
from models.models import User
import base64
#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤

#–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
bot = Bot(TOKEN)
dp = Dispatcher(bot)


#–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å—Å—ã–ª–∫—É, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–≤—è–∑–∞–Ω —Ç–µ–ª–µ–≥—Ä–∞–º id, –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ —Å—Å—ã–ª–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤—è–∂–µ—Ç—Å—è –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ
async def confirm_url(User_id):
    User_id = str(User_id)
    base64_user_id = base64.b64encode(bytes(User_id, 'utf-8')).decode('utf-8')
    return f'university-checker.ru/activatetg&{base64_user_id}'


#–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–∞ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω(admin_id –±–µ—Ä–µ—Ç—Å—è –∏–∑ university-checker/university-checker/config/settings.py)
async def on_startup(_):
    await bot.send_message(admin_id, text='Bot has been started')

#–§—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è,–≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ 
async def HelpStart(User_id):
    print(User_id)
    await bot.send_message(User_id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ—Å—Ç–æ–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –†–æ—Å—Å–∏–π—Å–∫–∏—Ö –í–£–ó–æ–≤üèõÔ∏è \n\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º <a href= "{str(await confirm_url(User_id))}">–ø—Ä–∏–≤—è–∂–∏—Ç–µ</a> telegram –∞–∫–∫–∞—É–Ω—Ç –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ\n\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å <a href= "https://university-checker.ru/">–Ω–∞—à —Å–∞–π—Ç</a> ', parse_mode=types.ParseMode.HTML, reply_markup=main_markup)
    


# –ø–æ–ª—É—á–∞–µ—Ç –≤—É–∑—ã –∏–∑ –±–¥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –≤—Å–µ –≤—É–∑—ã –≤ –≤–∏–¥–µ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –≤—É–∑ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
async def main_msg_add(User_id):
    message_add = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ –≤—É–∑üèõÔ∏è, –Ω–∞ —Å–µ—Ä–≤–∏—Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è \n\n'
    for obj in Service.objects.all():
        message_add += '<a href=' +  '"' + "university-checker.ru/add_subscribe&" + obj.slug + '"' + '>'+ '‚Ä¢ '+obj.name + '</a>' + '\n\n'

    max_message_length = 4096
    current_length = 0
    message_parts = []
    current_part = ''

    for line in message_add.split('\n'):
        if current_length + len(line) + 1 > max_message_length:
            message_parts.append(current_part)
            current_part = ''
            current_length = 0
        current_part += line + '\n'
        current_length += len(line) + 1

    message_parts.append(current_part)

    for i, part in enumerate(message_parts):
        if i > 0 or len(message_parts) > 1:
            part = '\n' + part

        if i == len(message_parts) - 1:
            await bot.send_message(User_id, part, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True, reply_markup=main_markup)
        else:
            await bot.send_message(User_id, part, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True)





        



# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª—å –ø–æ –µ–≥–æ ID –≤ —Ç–µ–ª–µ–≥–∞–º
async def get_values_by_column(User_id):
    queryset = User.objects.all()
    filtered_queryset = queryset.filter(**{'tgid': User_id})
    model_obj = filtered_queryset.first()
    value = getattr(model_obj, 'subscribes')
    value_list = [s.strip() for s in value.split(',')] if value else []
    return value_list

# –ø–æ–ª—É—á–∞–µ—Ç –≤—É–∑—ã –∏–∑ –±–¥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –≤—Å–µ –≤—É–∑—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –≤ –≤–∏–¥–µ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –≤—É–∑ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
async def main_msg_delete(User_id):
    message_remove = '–°–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤üèõÔ∏è, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã, –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–µ –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µüîî.\n\n\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—É–∑üèõÔ∏è, –ø–µ—Ä–µ–π–¥—è –ø–æ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–µ \n\n\n'
    slugs = await get_values_by_column(User_id)
    test123 = ['']
    print(slugs)
    if slugs != test123:
        del slugs[-1]
        for slug in slugs:
            service = Service.objects.get(slug = slug)
            # message_remove += '<a href=' +  '"' + "university-checker.ru/delete_subscribe&" + slug + '"' + '>'+ '‚Ä¢ '+service.name + '</a>' + '\n\n'
            message_remove += '‚Ä¢ '+'<b>'+service.name+'</b>' + '<a href=' + '"' + "university-checker.ru/delete_subscribe&" + slug + '"' + '>' + "\n–£–î–ê–õ–ò–¢–¨" +  '</a>' + '\n\n\n'
        #await bot.send_message(User_id, message_remove, parse_mode=types.ParseMode.HTML)
    else:
        message_remove = '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –≤—É–∑üèõÔ∏è!'
    max_message_length = 4096
    current_length = 0
    message_parts = []
    current_part = ''


    if message_remove != '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –≤—É–∑üèõÔ∏è!':
        for line in message_remove.split('\n\n'):
            if current_length + len(line) + 1 > max_message_length:
                message_parts.append(current_part)
                current_part = ''
                current_length = 0
            current_part += line + '\n'
            current_length += len(line) + 1

        message_parts.append(current_part)

        for i, part in enumerate(message_parts):
            if i > 0 or len(message_parts) > 1:
                part = '\n' + part

            if i == len(message_parts) - 1:
                await bot.send_message(User_id, part, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True, reply_markup=main_markup)
            else:
                await bot.send_message(User_id, part, parse_mode=types.ParseMode.HTML, disable_web_page_preview=True)
    else:
        await bot.send_message(User_id, message_remove)
    




#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
@dp.message_handler(commands=['help', 'start'])
async def commands(message: types.Message):
    if message.text == '/help':
        await HelpStart(message.from_user.id)
    elif message.text == '/start':
        await HelpStart(message.from_user.id)



#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π, —Å–≤—è–∑–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫–∫–∞—É–Ω—Ç —Ç–≥ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º –Ω–∞ —Å–∞–π—Ç–µ
@dp.callback_query_handler()
async def callback(callback: types.CallbackQuery):
    if callback.data == 'addss':
        if User.objects.filter(tgid=callback.from_user.id).exists():
            await main_msg_add(callback.from_user.id)
        else:
            #                                                                                                                                            message_remove += '<a href=' +  '"' + "university-checker.ru/delete_subscribe&" + slug + '"' + '>'+ service.name + '</a>' + '\n\n'
            await bot.send_message(callback.from_user.id, f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤–∞—à telegram –∞–∫–∫–∞—É–Ω—Ç <u>–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω</u> –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å <a href= "{str(await confirm_url(callback.from_user.id))}">–ø—Ä–∏–≤—è–∂–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç</a>, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è' , parse_mode=types.ParseMode.HTML)
    if callback.data == 'removess':
        if User.objects.filter(tgid=callback.from_user.id).exists():
            await main_msg_delete(callback.from_user.id)
        else:
            await bot.send_message(callback.from_user.id, f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤–∞—à telegram –∞–∫–∫–∞—É–Ω—Ç <u>–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω</u> –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å <a href= "{str(await confirm_url(callback.from_user.id))}">–ø—Ä–∏–≤—è–∂–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç</a>, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è' , parse_mode=types.ParseMode.HTML)


# –§—É–Ω–∫—Ü–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–µ–º —Å–µ—Ä–≤–∏—Å–µ –∏ –æ—à–∏–±–∫–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–∏—Å
async def notification(service_slug, error_code):
    users = User.objects.filter(subscribes__icontains = service_slug)
    service = Service.objects.get(slug = service_slug)
    for user in users:
        print(user.tgid)
        print(service.name)
        if user.tgid != None:
            notif = '‚ö†Ô∏è–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞: ' + str(service.name) + "\n\n–û—à–∏–±–∫–∞ " + str(error_code) + ': '+ str(Dict_error[error_code]) + '\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å - ' + str(service.url)
            await bot.send_message(user.tgid, notif)


# –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π –∫–æ–¥–æ–≤ –æ—à–∏–±–æ–∫
Dict_error={
    '100':'–í–æ–∑–º–æ–∂–Ω–∞ DDoS –∞—Ç–∞–∫–∞',
    '300': '–ó–∞—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–π url –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞, –∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ —Å–º–æ–≥ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ url –æ—Ç–Ω–æ—Å–∏—Ç—Å—è.',
    '301': '–î–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º, –∞ —Å—Å—ã–ª–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
    '303': '–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –¥—Ä—É–≥–∏–º –∞–¥—Ä–µ—Å–æ–º –∏ –µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å.',
    '305': '–î–æ—Å—Ç—É–ø –∫ –∑–∞—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É –º–æ–∂–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä,',
    '307': '–¢—Ä–µ–±—É–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –±—ã–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å.',
    '308': '–î–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º.',
    '400': '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –í –∑–∞–ø—Ä–æ—Å–µ –µ—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞,–ø–æ –ø—Ä–∏—á–∏–Ω–µ —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ url-–∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞.',
    '401': '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.',
    '402': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.',
    '403': '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å—É.',
    '404': '–°—Ç—Ä–∞–Ω–∏—Ü–∞,–∫–æ—Ç–æ—Ä—É—é –≤—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏,–Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ,–ø–æ –ø—Ä–∏—á–∏–Ω–µ —Ç–æ–≥–æ,—á—Ç–æ –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏ –±–æ–ª–µ–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.',
    '405': '–ú–µ—Ç–æ–¥, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–ø—Ä–æ—Å–∞, –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞, –ø–æ—ç—Ç–æ–º—É —Å–µ—Ä–≤–µ—Ä –Ω–µ —Å–º–æ–≥ –µ–≥–æ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å.',
    '406': '–ù—É–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.',
    '407': '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–µ.',
    '408': '–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ. –ò–ª–∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ,—Å–∞–π—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.',
    '409': '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –∏–ª–∏ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —Å–µ—Ä–≤–µ—Ä–∞.',
    '410': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–æ–ª–µ–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–∫–∞–∑–∞–Ω–Ω—ã–π url-–∞–¥—Ä–µ—Å –≤–µ—Ä–µ–Ω –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–æ–∫,–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.',
    '412': '–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª–µ–π –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.',
    '413':'–†–∞–∑–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –±–æ–ª—å—à–µ, —á–µ–º —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –æ–±–æ—Ä–∞–±–æ—Ç–∞—Ç—å.',
    '414': '–°–µ—Ä–≤–µ—Ä –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Å–µ—Ä–≤–µ—Ä–æ–º url –¥–ª–∏–Ω–Ω–µ–µ, —á–µ–º —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å.',
    '415': '–°–µ—Ä–≤–µ—Ä –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç.',
    '422': '–°–µ—Ä–≤–µ—Ä –Ω–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–¥–∏–Ω (–∏–ª–∏ –±–æ–ª–µ–µ) —ç–ª–µ–º–µ–Ω—Ç –∑–∞–ø—Ä–æ—Å–∞.',
    '423': '–°–µ—Ä–≤–µ—Ä –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–∞–∫ –∫–∞–∫ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ–±—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.',
    '424': '–°–µ—Ä–≤–µ—Ä –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å, —Ç–∞–∫ –∫–∞–∫ –æ–¥–∏–Ω –∏–∑ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.',
    '426': '–°–µ—Ä–≤–µ—Ä –∑–∞–ø—Ä–æ—Å–∏–ª –∞–ø–≥—Ä–µ–π–¥ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–æ SSL, –Ω–æ SSL –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∫–ª–∏–µ–Ω—Ç–æ–º.',
    '429':'–í–∞–º–∏ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏.',
    '500': '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.',
    '502': '–°–µ—Ä–≤–µ—Ä, –¥–µ–π—Å—Ç–≤—É—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —à–ª—é–∑–∞ –∏–ª–∏ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ª—É—á–∏–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ü–µ–ø–æ—á–∫–µ –∑–∞–ø—Ä–æ—Å–æ–≤, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–±—Ä–∞—Ç–∏–ª—Å—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.',
    '503': '–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞.',
    '504': '–°–µ—Ä–≤–µ—Ä, –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–Ω–µ—à–Ω–µ–≥–æ —à–ª—é–∑–∞ –∏–ª–∏ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞, —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–∫–ª–∏–∫ –æ—Ç –≤—ã—à–µ—Å—Ç–æ—è—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω –æ–±—Ä–∞—Ç–∏–ª—Å—è, –ø—ã—Ç–∞—è—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.',
    '505': '–°–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–µ—Ä—Å–∏—é HTTP-–ø—Ä–æ—Ç–æ–∫–æ–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ —Ä–æ–±–æ—Ç–∞.',
    '507': '–°–µ—Ä–≤–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ.'
}

# –∑–∞–ø—É—Å–∫ –ë–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)
